module fir_filter (
    input clk,
    input rst,
    input signed [7:0] x_in,
    output reg signed [15:0] y_out
);
    // Coefficients
    parameter signed [7:0] h0 = 8'd1;
    parameter signed [7:0] h1 = 8'd2;
    parameter signed [7:0] h2 = 8'd3;
    parameter signed [7:0] h3 = 8'd4;

    // Shift registers for input samples
    reg signed [7:0] x_reg0, x_reg1, x_reg2, x_reg3;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            x_reg0 <= 0; x_reg1 <= 0; x_reg2 <= 0; x_reg3 <= 0;
            y_out <= 0;
        end else begin
            // Shift previous samples
            x_reg3 <= x_reg2;
            x_reg2 <= x_reg1;
            x_reg1 <= x_reg0;
            x_reg0 <= x_in;

            // Compute FIR output
            y_out <= h0*x_reg0 + h1*x_reg1 + h2*x_reg2 + h3*x_reg3;
        end
    end
endmodule
